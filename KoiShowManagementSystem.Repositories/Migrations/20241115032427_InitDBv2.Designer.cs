// <auto-generated />
using System;
using KoiShowManagementSystem.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KoiShowManagementSystem.Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241115032427_InitDBv2")]
    partial class InitDBv2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            // Thiết lập các annotation cho mô hình
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            // Cấu hình để sử dụng Identity Columns của SQL Server
            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            // Định nghĩa thực thể Event_Koi_Participation
            modelBuilder.Entity("KoiShowManagementSystem.Repositories.Entity.Event_Koi_Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    // Cột Category (Loại)
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    // Cột EventsId (ID sự kiện)
                    b.Property<int>("EventsId")
                        .HasColumnType("int");

                    // Cột KoiId (ID cá Koi)
                    b.Property<int>("KoiId")
                        .HasColumnType("int");

                    // Cột Score (Điểm số)
                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    // Chỉ mục cho EventsId
                    b.HasIndex("EventsId");

                    // Chỉ mục cho KoiId
                    b.HasIndex("KoiId");

                    // Tên bảng
                    b.ToTable("Event_Koi_Participations");
                });

            // Định nghĩa thực thể Events
            modelBuilder.Entity("KoiShowManagementSystem.Repositories.Entity.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    // Cột Description (Mô tả)
                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    // Cột EndDate (Ngày kết thúc)
                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    // Cột EventName (Tên sự kiện)
                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    // Cột Location (Địa điểm)
                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    // Cột StartDate (Ngày bắt đầu)
                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    // Cột Status (Trạng thái)
                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            // Định nghĩa các thực thể khác cũng được ghi chú tương tự...
#pragma warning restore 612, 618
        }
    }
}
